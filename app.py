import streamlit as st
import firebase_admin
from firebase_admin import credentials, db
from datetime import datetime, timedelta

# --- CONFIGURA√á√ÉO DO FIREBASE ---
cred = credentials.Certificate("firebase_config.json")
if not firebase_admin._apps:
    firebase_admin.initialize_app(cred, {
        'databaseURL': 'https://SEU-PROJETO.firebaseio.com/'  # substitua aqui pelo seu link real
    })

# --- CONFIGURA√á√ïES DO APP ---
st.set_page_config(page_title="Corrente de Ora√ß√£o", page_icon="üôè", layout="centered")
st.title("üôè Corrente de Ora√ß√£o - 27/10 a 01/11")
st.markdown("Escolha um hor√°rio de 15 em 15 minutos. O hor√°rio escolhido valer√° para **todos os dias do per√≠odo**.")

# --- GERA√á√ÉO AUTOM√ÅTICA DOS HOR√ÅRIOS ---
def gerar_horarios():
    inicio = datetime.strptime("00:00", "%H:%M")
    horarios = [(inicio + timedelta(minutes=15 * i)).strftime("%H:%M") for i in range(96)]
    return horarios

horarios = gerar_horarios()

# --- CONEX√ÉO COM O BANCO ---
ref = db.reference("horarios_geral")

# Cria a estrutura inicial se ainda n√£o existir
if not ref.get():
    dados_iniciais = {h: "" for h in horarios}
    ref.set(dados_iniciais)

dados = ref.get()

# --- INTERFACE PRINCIPAL ---
col1, col2 = st.columns([2, 1])

with col1:
    st.subheader("üìÖ Hor√°rios dispon√≠veis (v√°lidos para todo o per√≠odo):")
    for h in horarios:
        nome = dados.get(h, "")
        if nome == "":
            st.markdown(f"üü¢ **{h}** ‚Äî *Dispon√≠vel*")
        else:
            st.markdown(f"üî¥ **{h}** ‚Äî Escolhido por: **{nome}**")

with col2:
    st.subheader("üôã‚Äç‚ôÇÔ∏è Reservar seu hor√°rio")
    nome = st.text_input("Digite seu nome completo:")
    opcoes_disponiveis = [h for h in horarios if dados.get(h, "") == ""]
    hora_escolhida = st.selectbox("Escolha um hor√°rio:", opcoes_disponiveis)

    if st.button("Confirmar hor√°rio"):
        if not nome.strip():
            st.warning("Por favor, insira seu nome antes de confirmar.")
        else:
            # Atualiza o hor√°rio para todos os dias (na pr√°tica, todos compartilham o mesmo registro)
            ref.child(hora_escolhida).set(nome.strip())
            st.success(f"‚è∞ Hor√°rio {hora_escolhida} reservado para {nome} (v√°lido de 27/10 a 01/11).")
            st.rerun()